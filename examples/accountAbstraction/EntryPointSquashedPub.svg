<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="1006pt" height="571pt" viewBox="0 0 1005.8 570.6"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 566.6)"><title>UmlClassDiagram</title><polygon fill="#fff" stroke="transparent" points="-4 4 -4 -566.6 1001.8 -566.6 1001.8 4 -4 4"/><g id="node1" class="node"><title>2</title><polygon fill="#f2f2f2" stroke="#000" points="0 -.5 0 -562.1 997.8 -562.1 997.8 -.5 0 -.5"/><text x="498.9" y="-545.5" font-family="Times,serif" font-size="14" text-anchor="middle">EntryPoint</text><text x="498.9" y="-528.7" font-family="Times,serif" font-size="14" text-anchor="middle">../../../account-abstraction/contracts/core/EntryPoint.sol</text><polyline fill="none" stroke="#000" points="0 -520.5 997.8 -520.5"/><text x="8" y="-503.9" font-family="Times,serif" font-size="14" text-anchor="start">Public:</text><text x="8" y="-487.1" font-family="Times,serif" font-size="14" text-anchor="start">deposits: mapping(address=&gt;DepositInfo)</text><text x="8" y="-470.3" font-family="Times,serif" font-size="14" text-anchor="start">SIG_VALIDATION_FAILED: uint256</text><polyline fill="none" stroke="#000" points="0 -462.1 997.8 -462.1"/><text x="8" y="-445.5" font-family="Times,serif" font-size="14" text-anchor="start">External:</text><text x="8" y="-428.7" font-family="Times,serif" font-size="14" text-anchor="start">&lt;&lt;payable&gt;&gt; null()</text><text x="8" y="-411.9" font-family="Times,serif" font-size="14" text-anchor="start">unlockStake()</text><text x="8" y="-395.1" font-family="Times,serif" font-size="14" text-anchor="start">withdrawStake(withdrawAddress: address)</text><text x="8" y="-378.3" font-family="Times,serif" font-size="14" text-anchor="start">withdrawTo(withdrawAddress: address, withdrawAmount: uint256)</text><text x="8" y="-361.5" font-family="Times,serif" font-size="14" text-anchor="start">simulateValidation(userOp: UserOperation)</text><text x="8" y="-344.7" font-family="Times,serif" font-size="14" text-anchor="start">simulateHandleOp(op: UserOperation, target: address, targetCallData: bytes)</text><text x="8" y="-327.9" font-family="Times,serif" font-size="14" text-anchor="start">innerHandleOp(callData: bytes, opInfo: UserOpInfo, context: bytes): (actualGasCost: uint256)</text><text x="8" y="-311.1" font-family="Times,serif" font-size="14" text-anchor="start">_validateSenderAndPaymaster(initCode: bytes, sender: address, paymasterAndData: bytes)</text><text x="8" y="-294.3" font-family="Times,serif" font-size="14" text-anchor="start">Public:</text><text x="8" y="-277.5" font-family="Times,serif" font-size="14" text-anchor="start">&lt;&lt;payable&gt;&gt; depositTo(account: address)</text><text x="8" y="-260.7" font-family="Times,serif" font-size="14" text-anchor="start">&lt;&lt;payable&gt;&gt; addStake(unstakeDelaySec: uint32)</text><text x="8" y="-243.9" font-family="Times,serif" font-size="14" text-anchor="start">&lt;&lt;event&gt;&gt; Deposited(account: address, totalDeposit: uint256)</text><text x="8" y="-227.1" font-family="Times,serif" font-size="14" text-anchor="start">&lt;&lt;event&gt;&gt; Withdrawn(account: address, withdrawAddress: address, amount: uint256)</text><text x="8" y="-210.3" font-family="Times,serif" font-size="14" text-anchor="start">&lt;&lt;event&gt;&gt; StakeLocked(account: address, totalStaked: uint256, unstakeDelaySec: uint256)</text><text x="8" y="-193.5" font-family="Times,serif" font-size="14" text-anchor="start">&lt;&lt;event&gt;&gt; StakeUnlocked(account: address, withdrawTime: uint256)</text><text x="8" y="-176.7" font-family="Times,serif" font-size="14" text-anchor="start">&lt;&lt;event&gt;&gt; StakeWithdrawn(account: address, withdrawAddress: address, amount: uint256)</text><text x="8" y="-159.9" font-family="Times,serif" font-size="14" text-anchor="start">&lt;&lt;event&gt;&gt; UserOperationEvent(userOpHash: bytes32, sender: address, paymaster: address, nonce: uint256, success: bool, actualGasCost: uint256, actualGasUsed: uint256)</text><text x="8" y="-143.1" font-family="Times,serif" font-size="14" text-anchor="start">&lt;&lt;event&gt;&gt; AccountDeployed(userOpHash: bytes32, sender: address, factory: address, paymaster: address)</text><text x="8" y="-126.3" font-family="Times,serif" font-size="14" text-anchor="start">&lt;&lt;event&gt;&gt; UserOperationRevertReason(userOpHash: bytes32, sender: address, nonce: uint256, revertReason: bytes)</text><text x="8" y="-109.5" font-family="Times,serif" font-size="14" text-anchor="start">&lt;&lt;event&gt;&gt; SignatureAggregatorChanged(aggregator: address)</text><text x="8" y="-92.7" font-family="Times,serif" font-size="14" text-anchor="start">getDepositInfo(account: address): (info: DepositInfo)</text><text x="8" y="-75.9" font-family="Times,serif" font-size="14" text-anchor="start">balanceOf(account: address): uint256</text><text x="8" y="-59.1" font-family="Times,serif" font-size="14" text-anchor="start">handleOps(ops: UserOperation[], beneficiary: address)</text><text x="8" y="-42.3" font-family="Times,serif" font-size="14" text-anchor="start">handleAggregatedOps(opsPerAggregator: UserOpsPerAggregator[], beneficiary: address)</text><text x="8" y="-25.5" font-family="Times,serif" font-size="14" text-anchor="start">getUserOpHash(userOp: UserOperation): bytes32</text><text x="8" y="-8.7" font-family="Times,serif" font-size="14" text-anchor="start">getSenderAddress(initCode: bytes)</text></g></g></svg>