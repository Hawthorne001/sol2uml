<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="1313pt" height="1007pt" viewBox="0 0 1313.37 1007.4"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1003.4)"><title>UmlClassDiagram</title><polygon fill="#fff" stroke="transparent" points="-4 4 -4 -1003.4 1309.37 -1003.4 1309.37 4 -4 4"/><g id="node1" class="node"><title>2</title><polygon fill="#f2f2f2" stroke="#000" points="0 -.5 0 -998.9 1305.37 -998.9 1305.37 -.5 0 -.5"/><text x="652.68" y="-982.3" font-family="Times,serif" font-size="14" text-anchor="middle">EntryPoint</text><text x="652.68" y="-965.5" font-family="Times,serif" font-size="14" text-anchor="middle">../../../account-abstraction/contracts/core/EntryPoint.sol</text><polyline fill="none" stroke="#000" points="0 -957.3 1305.37 -957.3"/><text x="8" y="-940.7" font-family="Times,serif" font-size="14" text-anchor="start">Private:</text><text x="8" y="-923.9" font-family="Times,serif" font-size="14" text-anchor="start">senderCreator: SenderCreator &lt;&lt;EntryPoint&gt;&gt;</text><text x="8" y="-907.1" font-family="Times,serif" font-size="14" text-anchor="start">SIMULATE_FIND_AGGREGATOR: address &lt;&lt;EntryPoint&gt;&gt;</text><text x="8" y="-890.3" font-family="Times,serif" font-size="14" text-anchor="start">INNER_OUT_OF_GAS: bytes32 &lt;&lt;EntryPoint&gt;&gt;</text><text x="8" y="-873.5" font-family="Times,serif" font-size="14" text-anchor="start">REVERT_REASON_MAX_LEN: uint256 &lt;&lt;EntryPoint&gt;&gt;</text><text x="8" y="-856.7" font-family="Times,serif" font-size="14" text-anchor="start">Public:</text><text x="8" y="-839.9" font-family="Times,serif" font-size="14" text-anchor="start">deposits: mapping(address=&gt;DepositInfo) &lt;&lt;StakeManager&gt;&gt;</text><text x="8" y="-823.1" font-family="Times,serif" font-size="14" text-anchor="start">SIG_VALIDATION_FAILED: uint256 &lt;&lt;EntryPoint&gt;&gt;</text><polyline fill="none" stroke="#000" points="0 -814.9 1305.37 -814.9"/><text x="8" y="-798.3" font-family="Times,serif" font-size="14" text-anchor="start">Private:</text><text x="8" y="-781.5" font-family="Times,serif" font-size="14" text-anchor="start">_executeUserOp(opIndex: uint256, userOp: UserOperation, opInfo: UserOpInfo): (collected: uint256) &lt;&lt;EntryPoint&gt;&gt;</text><text x="8" y="-764.7" font-family="Times,serif" font-size="14" text-anchor="start">_validatePrepayment(opIndex: uint256, userOp: UserOperation, outOpInfo: UserOpInfo): (validationData: uint256, paymasterValidationData: uint256) &lt;&lt;EntryPoint&gt;&gt;</text><text x="8" y="-747.9" font-family="Times,serif" font-size="14" text-anchor="start">_handlePostOp(opIndex: uint256, mode: IPaymaster.PostOpMode, opInfo: UserOpInfo, context: bytes, actualGas: uint256): (actualGasCost: uint256) &lt;&lt;EntryPoint&gt;&gt;</text><text x="8" y="-731.1" font-family="Times,serif" font-size="14" text-anchor="start">Internal:</text><text x="8" y="-714.3" font-family="Times,serif" font-size="14" text-anchor="start">_getStakeInfo(addr: address): (info: StakeInfo) &lt;&lt;StakeManager&gt;&gt;</text><text x="8" y="-697.5" font-family="Times,serif" font-size="14" text-anchor="start">_incrementDeposit(account: address, amount: uint256) &lt;&lt;StakeManager&gt;&gt;</text><text x="8" y="-680.7" font-family="Times,serif" font-size="14" text-anchor="start">_compensate(beneficiary: address, amount: uint256) &lt;&lt;EntryPoint&gt;&gt;</text><text x="8" y="-663.9" font-family="Times,serif" font-size="14" text-anchor="start">_copyUserOpToMemory(userOp: UserOperation, mUserOp: MemoryUserOp) &lt;&lt;EntryPoint&gt;&gt;</text><text x="8" y="-647.1" font-family="Times,serif" font-size="14" text-anchor="start">_getRequiredPrefund(mUserOp: MemoryUserOp): (requiredPrefund: uint256) &lt;&lt;EntryPoint&gt;&gt;</text><text x="8" y="-630.3" font-family="Times,serif" font-size="14" text-anchor="start">_createSenderIfNeeded(opIndex: uint256, opInfo: UserOpInfo, initCode: bytes) &lt;&lt;EntryPoint&gt;&gt;</text><text x="8" y="-613.5" font-family="Times,serif" font-size="14" text-anchor="start">_simulationOnlyValidations(userOp: UserOperation) &lt;&lt;EntryPoint&gt;&gt;</text><text x="8" y="-596.7" font-family="Times,serif" font-size="14" text-anchor="start">_validateAccountPrepayment(opIndex: uint256, op: UserOperation, opInfo: UserOpInfo, requiredPrefund: uint256): (gasUsedByValidateAccountPrepayment: uint256, validationData: uint256) &lt;&lt;EntryPoint&gt;&gt;</text><text x="8" y="-579.9" font-family="Times,serif" font-size="14" text-anchor="start">_validatePaymasterPrepayment(opIndex: uint256, op: UserOperation, opInfo: UserOpInfo, requiredPreFund: uint256, gasUsedByValidateAccountPrepayment: uint256): (context: bytes, validationData: uint256) &lt;&lt;EntryPoint&gt;&gt;</text><text x="8" y="-563.1" font-family="Times,serif" font-size="14" text-anchor="start">_validateAccountAndPaymasterValidationData(opIndex: uint256, validationData: uint256, paymasterValidationData: uint256, expectedAggregator: address) &lt;&lt;EntryPoint&gt;&gt;</text><text x="8" y="-546.3" font-family="Times,serif" font-size="14" text-anchor="start">_getValidationData(validationData: uint256): (aggregator: address, outOfTimeRange: bool) &lt;&lt;EntryPoint&gt;&gt;</text><text x="8" y="-529.5" font-family="Times,serif" font-size="14" text-anchor="start">getUserOpGasPrice(mUserOp: MemoryUserOp): uint256 &lt;&lt;EntryPoint&gt;&gt;</text><text x="8" y="-512.7" font-family="Times,serif" font-size="14" text-anchor="start">min(a: uint256, b: uint256): uint256 &lt;&lt;EntryPoint&gt;&gt;</text><text x="8" y="-495.9" font-family="Times,serif" font-size="14" text-anchor="start">getOffsetOfMemoryBytes(data: bytes): (offset: uint256) &lt;&lt;EntryPoint&gt;&gt;</text><text x="8" y="-479.1" font-family="Times,serif" font-size="14" text-anchor="start">getMemoryBytesFromOffset(offset: uint256): (data: bytes) &lt;&lt;EntryPoint&gt;&gt;</text><text x="8" y="-462.3" font-family="Times,serif" font-size="14" text-anchor="start">numberMarker() &lt;&lt;EntryPoint&gt;&gt;</text><text x="8" y="-445.5" font-family="Times,serif" font-size="14" text-anchor="start">External:</text><text x="8" y="-428.7" font-family="Times,serif" font-size="14" text-anchor="start">&lt;&lt;payable&gt;&gt; null() &lt;&lt;StakeManager&gt;&gt;</text><text x="8" y="-411.9" font-family="Times,serif" font-size="14" text-anchor="start">unlockStake() &lt;&lt;StakeManager&gt;&gt;</text><text x="8" y="-395.1" font-family="Times,serif" font-size="14" text-anchor="start">withdrawStake(withdrawAddress: address) &lt;&lt;StakeManager&gt;&gt;</text><text x="8" y="-378.3" font-family="Times,serif" font-size="14" text-anchor="start">withdrawTo(withdrawAddress: address, withdrawAmount: uint256) &lt;&lt;StakeManager&gt;&gt;</text><text x="8" y="-361.5" font-family="Times,serif" font-size="14" text-anchor="start">simulateValidation(userOp: UserOperation) &lt;&lt;EntryPoint&gt;&gt;</text><text x="8" y="-344.7" font-family="Times,serif" font-size="14" text-anchor="start">simulateHandleOp(op: UserOperation, target: address, targetCallData: bytes) &lt;&lt;EntryPoint&gt;&gt;</text><text x="8" y="-327.9" font-family="Times,serif" font-size="14" text-anchor="start">innerHandleOp(callData: bytes, opInfo: UserOpInfo, context: bytes): (actualGasCost: uint256) &lt;&lt;EntryPoint&gt;&gt;</text><text x="8" y="-311.1" font-family="Times,serif" font-size="14" text-anchor="start">_validateSenderAndPaymaster(initCode: bytes, sender: address, paymasterAndData: bytes) &lt;&lt;EntryPoint&gt;&gt;</text><text x="8" y="-294.3" font-family="Times,serif" font-size="14" text-anchor="start">Public:</text><text x="8" y="-277.5" font-family="Times,serif" font-size="14" text-anchor="start">&lt;&lt;payable&gt;&gt; depositTo(account: address) &lt;&lt;StakeManager&gt;&gt;</text><text x="8" y="-260.7" font-family="Times,serif" font-size="14" text-anchor="start">&lt;&lt;payable&gt;&gt; addStake(unstakeDelaySec: uint32) &lt;&lt;StakeManager&gt;&gt;</text><text x="8" y="-243.9" font-family="Times,serif" font-size="14" text-anchor="start">&lt;&lt;event&gt;&gt; Deposited(account: address, totalDeposit: uint256) &lt;&lt;IStakeManager&gt;&gt;</text><text x="8" y="-227.1" font-family="Times,serif" font-size="14" text-anchor="start">&lt;&lt;event&gt;&gt; Withdrawn(account: address, withdrawAddress: address, amount: uint256) &lt;&lt;IStakeManager&gt;&gt;</text><text x="8" y="-210.3" font-family="Times,serif" font-size="14" text-anchor="start">&lt;&lt;event&gt;&gt; StakeLocked(account: address, totalStaked: uint256, unstakeDelaySec: uint256) &lt;&lt;IStakeManager&gt;&gt;</text><text x="8" y="-193.5" font-family="Times,serif" font-size="14" text-anchor="start">&lt;&lt;event&gt;&gt; StakeUnlocked(account: address, withdrawTime: uint256) &lt;&lt;IStakeManager&gt;&gt;</text><text x="8" y="-176.7" font-family="Times,serif" font-size="14" text-anchor="start">&lt;&lt;event&gt;&gt; StakeWithdrawn(account: address, withdrawAddress: address, amount: uint256) &lt;&lt;IStakeManager&gt;&gt;</text><text x="8" y="-159.9" font-family="Times,serif" font-size="14" text-anchor="start">&lt;&lt;event&gt;&gt; UserOperationEvent(userOpHash: bytes32, sender: address, paymaster: address, nonce: uint256, success: bool, actualGasCost: uint256, actualGasUsed: uint256) &lt;&lt;IEntryPoint&gt;&gt;</text><text x="8" y="-143.1" font-family="Times,serif" font-size="14" text-anchor="start">&lt;&lt;event&gt;&gt; AccountDeployed(userOpHash: bytes32, sender: address, factory: address, paymaster: address) &lt;&lt;IEntryPoint&gt;&gt;</text><text x="8" y="-126.3" font-family="Times,serif" font-size="14" text-anchor="start">&lt;&lt;event&gt;&gt; UserOperationRevertReason(userOpHash: bytes32, sender: address, nonce: uint256, revertReason: bytes) &lt;&lt;IEntryPoint&gt;&gt;</text><text x="8" y="-109.5" font-family="Times,serif" font-size="14" text-anchor="start">&lt;&lt;event&gt;&gt; SignatureAggregatorChanged(aggregator: address) &lt;&lt;IEntryPoint&gt;&gt;</text><text x="8" y="-92.7" font-family="Times,serif" font-size="14" text-anchor="start">getDepositInfo(account: address): (info: DepositInfo) &lt;&lt;StakeManager&gt;&gt;</text><text x="8" y="-75.9" font-family="Times,serif" font-size="14" text-anchor="start">balanceOf(account: address): uint256 &lt;&lt;StakeManager&gt;&gt;</text><text x="8" y="-59.1" font-family="Times,serif" font-size="14" text-anchor="start">handleOps(ops: UserOperation[], beneficiary: address) &lt;&lt;EntryPoint&gt;&gt;</text><text x="8" y="-42.3" font-family="Times,serif" font-size="14" text-anchor="start">handleAggregatedOps(opsPerAggregator: UserOpsPerAggregator[], beneficiary: address) &lt;&lt;EntryPoint&gt;&gt;</text><text x="8" y="-25.5" font-family="Times,serif" font-size="14" text-anchor="start">getUserOpHash(userOp: UserOperation): bytes32 &lt;&lt;EntryPoint&gt;&gt;</text><text x="8" y="-8.7" font-family="Times,serif" font-size="14" text-anchor="start">getSenderAddress(initCode: bytes) &lt;&lt;EntryPoint&gt;&gt;</text></g></g></svg>